extends  ../resources/pug/layout

append meta
    <!-- No more cache -->
    meta( http-equiv="cache-control" content="no-cache, no-store, must-revalidate, post-check=0, pre-check=0" )
    meta( http-equiv="cache-control" content="max-age=0" )
    meta( http-equiv="expires" content="0" )
    meta( http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" )
    meta( http-equiv="pragma" content="no-cache" )

block scripts
    script( src="//cdn.jsdelivr.net/gh/lunalabsltd/touchemulator/touch-emulator.js" )
    script.
        TouchEmulator();

    if resources.scripts
        for resource in resources.scripts
            script( src=resource.src defer type = resource.isEs6Module ? 'module' : 'text/javascript' )

block config
    script.
        var $environment = {
            baseUrl: "./",
            resourceConfig: {
                json: "external",
                image: "external",
                video: "external",
                blob: "external",
                sound: "external"
            },
            packageConfig: {
                userId: !{ JSON.stringify( pi.userId ) },
                version: !{ JSON.stringify( package.version ) }
            },
            playerPrefs: true,
            targetPlatform: !{ JSON.stringify( targetPlatform ) },
            forceIncludedClasses: !{ JSON.stringify( forceIncludedClasses ) },
        };

block preloader

prepend content
    script.
        window.TRACE = document.location.search.toLowerCase().indexOf( 'trace' ) >= 0;
    script.
        let lastUploadedShaderTracingVersion = -1;
        setInterval( () => {
            if (lastUploadedShaderTracingVersion === shaderVariantsTraceResults.version) {
                return;
            }

            lastUploadedShaderTracingVersion = shaderVariantsTraceResults.version;

            fetch( window.location.origin + "/tracing/shader/variants", { method: "POST", body: shaderVariantsTraceResults.serialize() } ); }, 500 );
